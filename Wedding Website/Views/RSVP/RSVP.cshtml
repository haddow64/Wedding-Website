@model Wedding_Website.Models.RSVP
@{
    ViewBag.Title = "RSVP";
}

<body class="background-image">
    <div>
        <hr />
        <h1 class="text-center">RSVP</h1>
        <hr />
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Response, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Response, new SelectList(new[] { "I'll be there", "I can't make it" }), new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Response, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Adult, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Adult, new SelectList(new[] { "Adult", "Child" }), new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Adult, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StarterChoice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.StarterChoice, new SelectList(new[] { "Chicken Liver Parfait", "Roast Red Pepper, Tomato & Lentil Soup (V)" }), new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StarterChoice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DieatryRequirements, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.DieatryRequirements, new SelectList(new[] { "None", "Vegetarian", "Vegan", "GF/WF", "Other" }), new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DieatryRequirements, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.LabelFor(model => model.DietaryRequirementsDetails, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DietaryRequirementsDetails, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DietaryRequirementsDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        <br /><br />

        @Html.ValidationMessageFor(model => model.AdditionalRSVPs, "", new { @class = "text-danger" })
        <div id="AdditionalRSVPHolder">

        </div>

        <div class="form-group">
            <label class="control-label col-md-2"></label>
            <div class="col-md-10">
                <button type="button" id="AddRSVP" class="btn">Click here to <br />add another guest</button>
            </div>
        </div>

        <br /><br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    }
</body>